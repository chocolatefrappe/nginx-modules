name: Release channel

on:
  workflow_call:
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      # Generate release versions
      - id: release
        run: echo 'version=["stable", "mainline"]' >> "$GITHUB_OUTPUT"
      # Generate modules
      - uses: actions/checkout@v4
      - id: module
        run: echo "module=$(jq -ecr "keys" nginx-modules.json)" >> "$GITHUB_OUTPUT"
    outputs:
      version: ${{ steps.release.outputs.version }}
      module: ${{ steps.module.outputs.module }}

  alpine:
    name: alpine
    # continue-on-error: true
    needs:
      - generate
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        version: ${{ fromJson(needs.generate.outputs.version) }}
        module: ${{ fromJson(needs.generate.outputs.module) }}
    uses: ./.github/workflows/use-docker-build.yml
    secrets: inherit
    with:
      targets: alpine
      version: ${{ matrix.version }}
      module: ${{ matrix.module }}
      push: ${{ github.event_name != 'pull_request' }}

  debian:
    name: debian
    # continue-on-error: true
    needs:
      - generate
      - prepare
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        version: ${{ fromJson(needs.generate.outputs.version) }}
        module: ${{ fromJson(needs.generate.outputs.module) }}
    uses: ./.github/workflows/use-docker-build.yml
    secrets: inherit
    with:
      targets: debian
      version: ${{ matrix.version }}
      module: ${{ matrix.module }}
      push: ${{ github.event_name != 'pull_request' }}
