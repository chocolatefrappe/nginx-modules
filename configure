#!/bin/bash

BAKE_FILE="docker-bake.hcl"
NGINX_MODULES=$(jq -cr 'keys | tojson' nginx-modules.json)

if [ -f "$BAKE_FILE" ]; then
    rm $BAKE_FILE
fi

echo "Generating $BAKE_FILE file..."

echo "# Generated by configure script" > $BAKE_FILE
{
    echo 'variable "REGISTRY_IMAGE" { default = "chocolatefrappe/nginx-modules" }'
    echo 'variable "NGINX_VERSION" { default = "stable" }'
    echo 'variable "NGINX_MODULES" {'
    echo '    default = "'${NGINX_MODULES//\"/\\\"}'"'
    echo '    validation {'
    echo '        condition = NGINX_MODULES != ""'
    echo '        error_message = "The variable 'NGINX_MODULES' must not be empty."'
    echo '    }'
    echo '}'
    echo ''
    echo 'target "nginx-modules-alpine" {'
    echo '    name = "nginx-module-${module}-alpine"'
    echo '    dockerfile = "alpine/Dockerfile"'
    echo '    matrix = {'
    echo '        module = jsondecode("${NGINX_MODULES}")'
    echo '    }'
    echo '    args = {'
    echo '        NGINX_VERSION = "${NGINX_VERSION}"',
    echo '        ENABLED_MODULES = "${module}"',
    echo '    }'
    echo '    platforms = ['
    echo '        "linux/amd64",'
    echo '        "linux/arm64",'
    echo '    ]'
    echo '    tags = ['
    echo '        "${REGISTRY_IMAGE}:${NGINX_VERSION}-alpine-${module}"'
    echo '    ]'
    echo '}'
    echo ''
    echo 'target "nginx-modules-debian" {'
    echo '    name = "nginx-module-${module}-debian"'
    echo '    dockerfile = "debian/Dockerfile"'
    echo '    matrix = {'
    echo '        module = jsondecode("${NGINX_MODULES}")'
    echo '    }'
    echo '    args = {'
    echo '        NGINX_VERSION = "${NGINX_VERSION}"',
    echo '        ENABLED_MODULES = "${module}"',
    echo '    }'
    echo '    platforms = ['
    echo '        "linux/amd64",'
    echo '        "linux/arm64",'
    echo '    ]'
    echo '    tags = ['
    echo '        "${REGISTRY_IMAGE}:${NGINX_VERSION}-${module}"'
    echo '    ]'
    echo '}'
    echo ''
} >> $BAKE_FILE

echo "Done!"
