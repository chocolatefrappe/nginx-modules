# Generated by configure script
variable "NGINX_VERSIONS" {
    type = list(string)
    default = []
}
variable "NGINX_MODULES" {
    type = list(string)
    default = []
}

variable "REGISTRY_IMAGE" { default = "chocolatefrappe/nginx-modules" }

# NGINX targets for building images with various modules enabled.
group "default" {
    targets = [
        "nginx-modules-alpine",
        "nginx-modules-debian",
    ]
}
group "alpine" {
    targets = [
        "nginx-modules-alpine",
    ]
}
group "debian" {
    targets = [
        "nginx-modules-debian",
    ]
}

target "pkg-oss" {
    context = "pkg-oss"
    output = [ "pkg-oss" ]
    platforms = [ "local" ]
}

target "nginx-modules-alpine" {
    dockerfile = "alpine/Dockerfile"
    matrix = {
        NGINX_VERSION = NGINX_VERSIONS
        ENABLED_MODULE = NGINX_MODULES
    }
    name = "nginx-modules-alpine-${replace(NGINX_VERSION, ".", "-")}-${ENABLED_MODULE}"
    contexts = {
        "rustup-init": "target:rustup-init-musl"
    }
    args = {
        NGINX_VERSION = NGINX_VERSION,
        ENABLED_MODULES = ENABLED_MODULE,
    }
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ]
    tags = [
        "${REGISTRY_IMAGE}:${NGINX_VERSION}-alpine-${ENABLED_MODULE}",
        "ghcr.io/${REGISTRY_IMAGE}:${NGINX_VERSION}-alpine-${ENABLED_MODULE}",
    ]
}

target "nginx-modules-debian" {
    dockerfile = "debian/Dockerfile"
    matrix = {
        NGINX_VERSION = NGINX_VERSIONS
        ENABLED_MODULE = NGINX_MODULES
    }
    name = "nginx-modules-debian-${replace(NGINX_VERSION, ".", "-")}-${ENABLED_MODULE}"
    contexts = {
        "rustup-init": "target:rustup-init-gnu"
    }
    args = {
        NGINX_VERSION = NGINX_VERSION,
        ENABLED_MODULES = ENABLED_MODULE,
    }
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ]
    tags = [
        "${REGISTRY_IMAGE}:${NGINX_VERSION}-${ENABLED_MODULE}",
        "ghcr.io/${REGISTRY_IMAGE}:${NGINX_VERSION}-${ENABLED_MODULE}",
    ]
}

target "rustup-init-gnu" {
  context = "rustup-init"
  dockerfile = "gnu.Dockerfile"
  tags = [
    "${REGISTRY_IMAGE}:rustup-init-gnu",
    "ghcr.io/${REGISTRY_IMAGE}:rustup-init-gnu",
    ]
}

target "rustup-init-musl" {
  context = "rustup-init"
  dockerfile = "musl.Dockerfile"
  tags = [
    "${REGISTRY_IMAGE}:rustup-init-musl",
    "ghcr.io/${REGISTRY_IMAGE}:rustup-init-musl",
    ]
}
