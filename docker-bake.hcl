# Generated by configure script
variable "NGINX_VERSION" { default = "stable" }
variable "NGINX_MODULES" {
    type = list(string)
    default = [
        "auth-spnego",
        "brotli",
        "echo",
        "encrypted-session",
        "fips-check",
        "geoip",
        "geoip2",
        "headers-more",
        "image-filter",
        "lua",
        "ndk",
        "njs",
        "opentracing",
        "otel",
        "passenger",
        "perl",
        "rtmp",
        "set-misc",
        "subs-filter",
        "vts",
        "xslt",
        "zip",
    ]
}
variable "REGISTRY_IMAGE" { default = "chocolatefrappe/nginx-modules" }

# NGINX targets for building images with various modules enabled.
group "default" {
    targets = [
        "nginx-modules-alpine",
        "nginx-modules-debian",
    ]
}

target "nginx-modules-alpine" {
    dockerfile = "alpine/Dockerfile"
    matrix = {
      ENABLED_MODULES = NGINX_MODULES
    }
    name = "nginx-modules-alpine-${ENABLED_MODULES}"
    args = {
        ENABLED_MODULES = ENABLED_MODULES,
        NGINX_VERSION = NGINX_VERSION,
    }
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ]
    tags = [
        "${REGISTRY_IMAGE}:${NGINX_VERSION}-alpine-${ENABLED_MODULES}"
    ]
}

target "nginx-modules-debian" {
    dockerfile = "debian/Dockerfile"
    matrix = {
      ENABLED_MODULES = NGINX_MODULES
    }
    name = "nginx-modules-debian-${ENABLED_MODULES}"
    args = {
        ENABLED_MODULES = ENABLED_MODULES,
        NGINX_VERSION = NGINX_VERSION,
    }
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ]
    tags = [
        "${REGISTRY_IMAGE}:${NGINX_VERSION}-${ENABLED_MODULES}"
    ]
}
