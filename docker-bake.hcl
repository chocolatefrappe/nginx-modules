# Generated by configure script
variable "TAG" { default = "chocolatefrappe/nginx-modules" }
variable "NGINX_VERSION" { default = "stable" }

target "nginx-module-builder" {
    args = {
        NGINX_VERSION = "${NGINX_VERSION}"
        ENABLED_MODULES = "auth-spnego brotli echo encrypted-session fips-check geoip geoip2 headers-more image-filter lua ndk njs opentracing otel passenger perl rtmp set-misc subs-filter vts xslt zip"
    }
}

group "nginx-modules-alpine" {
    targets = [
        "nginx-module-auth-spnego-alpine",
        "nginx-module-brotli-alpine",
        "nginx-module-echo-alpine",
        "nginx-module-encrypted-session-alpine",
        "nginx-module-fips-check-alpine",
        "nginx-module-geoip-alpine",
        "nginx-module-geoip2-alpine",
        "nginx-module-headers-more-alpine",
        "nginx-module-image-filter-alpine",
        "nginx-module-lua-alpine",
        "nginx-module-ndk-alpine",
        "nginx-module-njs-alpine",
        "nginx-module-opentracing-alpine",
        "nginx-module-otel-alpine",
        "nginx-module-passenger-alpine",
        "nginx-module-perl-alpine",
        "nginx-module-rtmp-alpine",
        "nginx-module-set-misc-alpine",
        "nginx-module-subs-filter-alpine",
        "nginx-module-vts-alpine",
        "nginx-module-xslt-alpine",
        "nginx-module-zip-alpine",
    ]
}

group "nginx-modules-debian" {
    targets = [
        "nginx-module-auth-spnego-debian",
        "nginx-module-brotli-debian",
        "nginx-module-echo-debian",
        "nginx-module-encrypted-session-debian",
        "nginx-module-fips-check-debian",
        "nginx-module-geoip-debian",
        "nginx-module-geoip2-debian",
        "nginx-module-headers-more-debian",
        "nginx-module-image-filter-debian",
        "nginx-module-lua-debian",
        "nginx-module-ndk-debian",
        "nginx-module-njs-debian",
        "nginx-module-opentracing-debian",
        "nginx-module-otel-debian",
        "nginx-module-passenger-debian",
        "nginx-module-perl-debian",
        "nginx-module-rtmp-debian",
        "nginx-module-set-misc-debian",
        "nginx-module-subs-filter-debian",
        "nginx-module-vts-debian",
        "nginx-module-xslt-debian",
        "nginx-module-zip-debian",
    ]
}

# auth-spnego
target "nginx-module-auth-spnego-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-auth-spnego"
    labels = [
        "org.opencontainers.image.title=nginx-module-auth-spnego",
        "org.opencontainers.image.description=3rd-party kerberos authentication dynamic module",
        "org.opencontainers.image.url=https://github.com/stnoonan/spnego-http-auth-nginx-module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-auth-spnego"
    ]
}
target "nginx-module-auth-spnego-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-auth-spnego"
    labels = [
        "org.opencontainers.image.title=nginx-module-auth-spnego",
        "org.opencontainers.image.description=3rd-party kerberos authentication dynamic module",
        "org.opencontainers.image.url=https://github.com/stnoonan/spnego-http-auth-nginx-module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-auth-spnego"
    ]
}

# brotli
target "nginx-module-brotli-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-brotli"
    labels = [
        "org.opencontainers.image.title=nginx-module-brotli",
        "org.opencontainers.image.description=3rd-party brotli compression dynamic modules",
        "org.opencontainers.image.url=https://github.com/google/ngx_brotli",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-brotli"
    ]
}
target "nginx-module-brotli-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-brotli"
    labels = [
        "org.opencontainers.image.title=nginx-module-brotli",
        "org.opencontainers.image.description=3rd-party brotli compression dynamic modules",
        "org.opencontainers.image.url=https://github.com/google/ngx_brotli",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-brotli"
    ]
}

# echo
target "nginx-module-echo-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-echo"
    labels = [
        "org.opencontainers.image.title=nginx-module-echo",
        "org.opencontainers.image.description=Brings 'echo', 'sleep', 'time', 'exec' and more shell-style goodies to Nginx config file",
        "org.opencontainers.image.url=https://github.com/openresty/echo-nginx-module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-echo"
    ]
}
target "nginx-module-echo-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-echo"
    labels = [
        "org.opencontainers.image.title=nginx-module-echo",
        "org.opencontainers.image.description=Brings 'echo', 'sleep', 'time', 'exec' and more shell-style goodies to Nginx config file",
        "org.opencontainers.image.url=https://github.com/openresty/echo-nginx-module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-echo"
    ]
}

# encrypted-session
target "nginx-module-encrypted-session-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-encrypted-session"
    labels = [
        "org.opencontainers.image.title=nginx-module-encrypted-session",
        "org.opencontainers.image.description=3rd-party encrypted session dynamic module",
        "org.opencontainers.image.url=https://github.com/openresty/encrypted-session-nginx-module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-encrypted-session"
    ]
}
target "nginx-module-encrypted-session-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-encrypted-session"
    labels = [
        "org.opencontainers.image.title=nginx-module-encrypted-session",
        "org.opencontainers.image.description=3rd-party encrypted session dynamic module",
        "org.opencontainers.image.url=https://github.com/openresty/encrypted-session-nginx-module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-encrypted-session"
    ]
}

# fips-check
target "nginx-module-fips-check-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-fips-check"
    labels = [
        "org.opencontainers.image.title=nginx-module-fips-check",
        "org.opencontainers.image.description=3rd-party FIPS status check dynamic module",
        "org.opencontainers.image.url=https://github.com/ogarrett/nginx-fips-check-module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-fips-check"
    ]
}
target "nginx-module-fips-check-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-fips-check"
    labels = [
        "org.opencontainers.image.title=nginx-module-fips-check",
        "org.opencontainers.image.description=3rd-party FIPS status check dynamic module",
        "org.opencontainers.image.url=https://github.com/ogarrett/nginx-fips-check-module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-fips-check"
    ]
}

# geoip
target "nginx-module-geoip-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-geoip"
    labels = [
        "org.opencontainers.image.title=nginx-module-geoip",
        "org.opencontainers.image.description=GeoIP dynamic modules",
        "org.opencontainers.image.url=https://nginx.org/en/docs/stream/ngx_stream_geoip_module.html",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-geoip"
    ]
}
target "nginx-module-geoip-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-geoip"
    labels = [
        "org.opencontainers.image.title=nginx-module-geoip",
        "org.opencontainers.image.description=GeoIP dynamic modules",
        "org.opencontainers.image.url=https://nginx.org/en/docs/stream/ngx_stream_geoip_module.html",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-geoip"
    ]
}

# geoip2
target "nginx-module-geoip2-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-geoip2"
    labels = [
        "org.opencontainers.image.title=nginx-module-geoip2",
        "org.opencontainers.image.description=3rd-party GeoIP2 dynamic modules",
        "org.opencontainers.image.url=https://github.com/leev/ngx_http_geoip2_module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-geoip2"
    ]
}
target "nginx-module-geoip2-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-geoip2"
    labels = [
        "org.opencontainers.image.title=nginx-module-geoip2",
        "org.opencontainers.image.description=3rd-party GeoIP2 dynamic modules",
        "org.opencontainers.image.url=https://github.com/leev/ngx_http_geoip2_module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-geoip2"
    ]
}

# headers-more
target "nginx-module-headers-more-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-headers-more"
    labels = [
        "org.opencontainers.image.title=nginx-module-headers-more",
        "org.opencontainers.image.description=3rd-party headers-more dynamic module",
        "org.opencontainers.image.url=https://github.com/openresty/headers-more-nginx-module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-headers-more"
    ]
}
target "nginx-module-headers-more-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-headers-more"
    labels = [
        "org.opencontainers.image.title=nginx-module-headers-more",
        "org.opencontainers.image.description=3rd-party headers-more dynamic module",
        "org.opencontainers.image.url=https://github.com/openresty/headers-more-nginx-module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-headers-more"
    ]
}

# image-filter
target "nginx-module-image-filter-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-image-filter"
    labels = [
        "org.opencontainers.image.title=nginx-module-image-filter",
        "org.opencontainers.image.description=image filter dynamic module",
        "org.opencontainers.image.url=https://nginx.org/en/docs/http/ngx_http_image_filter_module.htm",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-image-filter"
    ]
}
target "nginx-module-image-filter-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-image-filter"
    labels = [
        "org.opencontainers.image.title=nginx-module-image-filter",
        "org.opencontainers.image.description=image filter dynamic module",
        "org.opencontainers.image.url=https://nginx.org/en/docs/http/ngx_http_image_filter_module.htm",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-image-filter"
    ]
}

# lua
target "nginx-module-lua-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-lua"
    labels = [
        "org.opencontainers.image.title=nginx-module-lua",
        "org.opencontainers.image.description=3rd-party Lua dynamic modules",
        "org.opencontainers.image.url=https://github.com/openresty/lua-nginx-module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-lua"
    ]
}
target "nginx-module-lua-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-lua"
    labels = [
        "org.opencontainers.image.title=nginx-module-lua",
        "org.opencontainers.image.description=3rd-party Lua dynamic modules",
        "org.opencontainers.image.url=https://github.com/openresty/lua-nginx-module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-lua"
    ]
}

# ndk
target "nginx-module-ndk-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-ndk"
    labels = [
        "org.opencontainers.image.title=nginx-module-ndk",
        "org.opencontainers.image.description=3rd-party NDK dynamic module",
        "org.opencontainers.image.url=https://github.com/vision5/ngx_devel_kit",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-ndk"
    ]
}
target "nginx-module-ndk-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-ndk"
    labels = [
        "org.opencontainers.image.title=nginx-module-ndk",
        "org.opencontainers.image.description=3rd-party NDK dynamic module",
        "org.opencontainers.image.url=https://github.com/vision5/ngx_devel_kit",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-ndk"
    ]
}

# njs
target "nginx-module-njs-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-njs"
    labels = [
        "org.opencontainers.image.title=nginx-module-njs",
        "org.opencontainers.image.description=njs dynamic modules",
        "org.opencontainers.image.url=https://nginx.org/en/docs/njs/",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-njs"
    ]
}
target "nginx-module-njs-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-njs"
    labels = [
        "org.opencontainers.image.title=nginx-module-njs",
        "org.opencontainers.image.description=njs dynamic modules",
        "org.opencontainers.image.url=https://nginx.org/en/docs/njs/",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-njs"
    ]
}

# opentracing
target "nginx-module-opentracing-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-opentracing"
    labels = [
        "org.opencontainers.image.title=nginx-module-opentracing",
        "org.opencontainers.image.description=3rd-party OpenTracing dynamic module",
        "org.opencontainers.image.url=https://github.com/opentracing-contrib/nginx-opentracing",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-opentracing"
    ]
}
target "nginx-module-opentracing-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-opentracing"
    labels = [
        "org.opencontainers.image.title=nginx-module-opentracing",
        "org.opencontainers.image.description=3rd-party OpenTracing dynamic module",
        "org.opencontainers.image.url=https://github.com/opentracing-contrib/nginx-opentracing",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-opentracing"
    ]
}

# otel
target "nginx-module-otel-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-otel"
    labels = [
        "org.opencontainers.image.title=nginx-module-otel",
        "org.opencontainers.image.description=NGINX Native OpenTelemetry (OTel) Module",
        "org.opencontainers.image.url=https://github.com/nginxinc/nginx-otel",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-otel"
    ]
}
target "nginx-module-otel-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-otel"
    labels = [
        "org.opencontainers.image.title=nginx-module-otel",
        "org.opencontainers.image.description=NGINX Native OpenTelemetry (OTel) Module",
        "org.opencontainers.image.url=https://github.com/nginxinc/nginx-otel",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-otel"
    ]
}

# passenger
target "nginx-module-passenger-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-passenger"
    labels = [
        "org.opencontainers.image.title=nginx-module-passenger",
        "org.opencontainers.image.description=3rd-party Passenger dynamic module",
        "org.opencontainers.image.url=https://www.phusionpassenger.com/library/config/nginx/intro.html",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-passenger"
    ]
}
target "nginx-module-passenger-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-passenger"
    labels = [
        "org.opencontainers.image.title=nginx-module-passenger",
        "org.opencontainers.image.description=3rd-party Passenger dynamic module",
        "org.opencontainers.image.url=https://www.phusionpassenger.com/library/config/nginx/intro.html",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-passenger"
    ]
}

# perl
target "nginx-module-perl-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-perl"
    labels = [
        "org.opencontainers.image.title=nginx-module-perl",
        "org.opencontainers.image.description=Perl dynamic module",
        "org.opencontainers.image.url=http://nginx.org/en/docs/http/ngx_http_perl_module.html",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-perl"
    ]
}
target "nginx-module-perl-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-perl"
    labels = [
        "org.opencontainers.image.title=nginx-module-perl",
        "org.opencontainers.image.description=Perl dynamic module",
        "org.opencontainers.image.url=http://nginx.org/en/docs/http/ngx_http_perl_module.html",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-perl"
    ]
}

# rtmp
target "nginx-module-rtmp-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-rtmp"
    labels = [
        "org.opencontainers.image.title=nginx-module-rtmp",
        "org.opencontainers.image.description=3rd-party RTMP dynamic module",
        "org.opencontainers.image.url=https://github.com/arut/nginx-rtmp-module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-rtmp"
    ]
}
target "nginx-module-rtmp-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-rtmp"
    labels = [
        "org.opencontainers.image.title=nginx-module-rtmp",
        "org.opencontainers.image.description=3rd-party RTMP dynamic module",
        "org.opencontainers.image.url=https://github.com/arut/nginx-rtmp-module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-rtmp"
    ]
}

# set-misc
target "nginx-module-set-misc-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-set-misc"
    labels = [
        "org.opencontainers.image.title=nginx-module-set-misc",
        "org.opencontainers.image.description=3rd-party set-misc dynamic module",
        "org.opencontainers.image.url=https://github.com/openresty/set-misc-nginx-module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-set-misc"
    ]
}
target "nginx-module-set-misc-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-set-misc"
    labels = [
        "org.opencontainers.image.title=nginx-module-set-misc",
        "org.opencontainers.image.description=3rd-party set-misc dynamic module",
        "org.opencontainers.image.url=https://github.com/openresty/set-misc-nginx-module",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-set-misc"
    ]
}

# subs-filter
target "nginx-module-subs-filter-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-subs-filter"
    labels = [
        "org.opencontainers.image.title=nginx-module-subs-filter",
        "org.opencontainers.image.description=3rd-party substitution dynamic module",
        "org.opencontainers.image.url=https://www.nginx.com/resources/wiki/modules/substitutions/",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-subs-filter"
    ]
}
target "nginx-module-subs-filter-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-subs-filter"
    labels = [
        "org.opencontainers.image.title=nginx-module-subs-filter",
        "org.opencontainers.image.description=3rd-party substitution dynamic module",
        "org.opencontainers.image.url=https://www.nginx.com/resources/wiki/modules/substitutions/",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-subs-filter"
    ]
}

# vts
target "nginx-module-vts-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-vts"
    labels = [
        "org.opencontainers.image.title=nginx-module-vts",
        "org.opencontainers.image.description=3rd-party virtual host traffic status dynamic module",
        "org.opencontainers.image.url=https://github.com/vozlt/nginx-module-vts",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-vts"
    ]
}
target "nginx-module-vts-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-vts"
    labels = [
        "org.opencontainers.image.title=nginx-module-vts",
        "org.opencontainers.image.description=3rd-party virtual host traffic status dynamic module",
        "org.opencontainers.image.url=https://github.com/vozlt/nginx-module-vts",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-vts"
    ]
}

# xslt
target "nginx-module-xslt-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-xslt"
    labels = [
        "org.opencontainers.image.title=nginx-module-xslt",
        "org.opencontainers.image.description=xslt dynamic module",
        "org.opencontainers.image.url=https://nginx.org/en/docs/http/ngx_http_xslt_module.html",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-xslt"
    ]
}
target "nginx-module-xslt-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-xslt"
    labels = [
        "org.opencontainers.image.title=nginx-module-xslt",
        "org.opencontainers.image.description=xslt dynamic module",
        "org.opencontainers.image.url=https://nginx.org/en/docs/http/ngx_http_xslt_module.html",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-xslt"
    ]
}

# zip
target "nginx-module-zip-alpine" {
    inherits = ["nginx-module-builder"]
    dockerfile = "alpine/Dockerfile"
    target = "nginx-module-zip"
    labels = [
        "org.opencontainers.image.title=nginx-module-zip",
        "org.opencontainers.image.description=3rd-party zip dynamic module",
        "org.opencontainers.image.url=https://github.com/evanmiller/mod_zip",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-alpine-zip"
    ]
}
target "nginx-module-zip-debian" {
    inherits = ["nginx-module-builder"]
    dockerfile = "debian/Dockerfile"
    target = "nginx-module-zip"
    labels = [
        "org.opencontainers.image.title=nginx-module-zip",
        "org.opencontainers.image.description=3rd-party zip dynamic module",
        "org.opencontainers.image.url=https://github.com/evanmiller/mod_zip",
        "org.opencontainers.image.version=${NGINX_VERSION}",
        "org.opencontainers.image.licenses=",
    ]
    tags = [
        "${TAG}:${NGINX_VERSION}-zip"
    ]
}

